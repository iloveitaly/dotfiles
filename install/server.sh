#!/bin/bash
# Description: installation entrypoint for servers (linux).
#   - No GitHub tokens should be stored on server
#

cd "$(dirname "$0")/.." || exit 1

rsync --exclude-from="install/standard-exclude.txt" \
  --exclude-from="install/server-exclude.txt" \
  -av . ~

sudo apt install snapd
sudo snap install yq diff-so-fancy speedtest
sudo snap install --classic nano

curl https://raw.githubusercontent.com/scopatz/nanorc/master/install.sh | sh
curl https://raw.githubusercontent.com/jesseduffield/lazydocker/master/scripts/install_update_linux.sh | bash

if [ ! -f /etc/apt/sources.list.d/mise.list ]; then
  wget -qO - https://mise.jdx.dev/gpg-key.pub | gpg --dearmor | sudo tee /etc/apt/keyrings/mise-archive-keyring.gpg 1>/dev/null
  echo "deb [signed-by=/etc/apt/keyrings/mise-archive-keyring.gpg arch=arm64] https://mise.jdx.dev/deb stable main" | sudo tee /etc/apt/sources.list.d/mise.list
fi

if [ ! -f /etc/apt/sources.list.d/azlux.list ]; then
  # https://packages.azlux.fr, has ctop, btop and others
  curl -fsSL https://azlux.fr/repo.gpg.key | sudo gpg --dearmor -o /usr/share/keyrings/azlux-archive-keyring.gpg
  echo "deb [signed-by=/usr/share/keyrings/azlux-archive-keyring.gpg arch=$(dpkg --print-architecture)] http://packages.azlux.fr/debian $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/azlux.list
fi

# this list was generated by chatgpt's ingestion of Brewfile; keep it up to date manually
sudo apt update
sudo apt install -y \
  git vim lynx rename wget ngrep iftop lftp httpie ncdu curl gawk jq sqlite3 zsh \
  zsh entr prettyping less fd-find tldr zoxide bc delta bat tree htop dnsutils moreutils qpdf \
  rsync watch iotop powertop mise libreadline-dev libffi-dev libyaml-dev \
  btop docker-ctop \
  nmap

mise install -y

eval "$(mise activate zsh)"

# on pis, it takes *forever* to compile rust binaries, but we need to because many binaries are out of date
# on traditional ubuntu/debian package repos
curl -L --proto '=https' --tlsv1.2 -sSf https://raw.githubusercontent.com/cargo-bins/cargo-binstall/main/install-from-binstall-release.sh | bash

# recent versions of these packages are not available via apt
cargo binstall -y ripgrep eza \
  usage-cli # for mise

# install some packages that are not available via apt
go install github.com/noborus/ov@latest

curl --proto '=https' --tlsv1.2 -LsSf https://github.com/atuinsh/atuin/releases/latest/download/atuin-installer.sh | sh -s -- --no-modify-path
# I don't want to add yet another binary to my path, especially since this is different than macOS
ln -s ~/.atuin/bin/atuin ~/.local/bin

cat <<EOF >~/.extra
alias cat=batcat
alias fd=fdfind

alias dokku="docker exec dokku dokku"
alias dokku-shell="docker exec -it dokku bash -l"

# fzf is really outdated, must install via git $(~/.fzf.zsh)
[ ! -d ~/.fzf ] && git clone --depth 1 https://github.com/junegunn/fzf.git ~/.fzf && ~/.fzf/install --no-key-bindings --no-completion --no-update-rc
# only available after install is complete
source ~/.fzf.zsh

# let's try mise out for a little while
# [ ! -d ~/.asdf ] && git clone https://github.com/asdf-vm/asdf.git ~/.asdf --branch v0.14.0

# since we are removing the plugin which handles this
eval "\$(mise exec -- direnv hook zsh)"
EOF

# delete some zsh_plugins that are macos specific
sed -i '/zicompdef/d' ~/.zsh_plugins
sed -i '/iTerm2-shell/d' ~/.zsh_plugins
sed -i '/zsh-auto-notify/d' ~/.zsh_plugins
sed -i '/fast-syntax-highlighting/d' ~/.zsh_plugins
sed -i '/zsh-autosuggestions/d' ~/.zsh_plugins
sed -i '/zsh-asdf-direnv/d' ~/.zsh_plugins

sudo chsh -s "$(which zsh)" "$(whoami)"

git config --global --unset commit.gpgsign

# if `python` doesn't exist, let's alias python3 to it if it exists
if ! command -v python &>/dev/null && command -v python3 &>/dev/null; then
  sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 1
fi

# cleaner output since this will be running inside ansible, or something similar
export ZINIT_COLORIZE=false

# run zinit to install all plugins
zsh -lc "source ~/.zshrc && zinit update --parallel"
